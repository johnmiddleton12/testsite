{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","utils/connect.js","components/CryptoBox.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","setShow","onClick","style","backgroundColor","className","Header","title","showAdd","location","useLocation","pathname","defaultProps","Footer","to","Task","task","onDelete","onToggle","done","onDoubleClick","id","cursor","description","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDescription","setDone","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","About","connectWallet","a","window","ethereum","request","method","addressArray","obj","status","address","message","href","rel","getCurrentWalletConnected","length","ConnectBtn","walletAddress","setWallet","setStatus","useEffect","addWalletListener","fetchData","connectWalletPressed","walletResponse","on","accounts","String","substring","App","setShowAdd","setTasks","path","element","filter","CryptoBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac6cd066.chunk.js","sourcesContent":["const Button = ({ color, text, setShow }) => {\n    return (\n        <button \n            onClick={setShow}\n            style={{backgroundColor: color}} \n            className='btn'\n        >\n            {text}\n        </button>\n    )\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nimport { useLocation } from 'react-router-dom'\n\nconst Header = ({ title , showAdd, setShow }) => {\n\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1> Dapp Header - {title}</h1>\n            {/* <Button color='green' text='New' onClick={onClick}/> */}\n            {location.pathname === '/' && <Button text={showAdd ? 'Close' : 'Add'} color={showAdd ? 'red' : 'steelBlue'} setShow={setShow}/>}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Main Page\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black',\n// }\n\nexport default Header\n","import { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div\n            // className={task.done ? \"task reminder\" : \"task\"}\n            className={`task ${task.done ? 'reminder' : ''}`}\n            onDoubleClick={() => onToggle(task.id)}\n        >\n            <h3>\n                {task.title}{\" \"}-{\" \"}{task.done ? \"Done\" : \"Not done\"}\n                <FaTimes\n                    style={{ color: \"red\", cursor: \"pointer\" }}\n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.description}</p>\n        </div>\n    );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task\n                    key={task.id}\n                    task={task}\n                    onDelete={onDelete}\n                    onToggle={onToggle}\n                ></Task>\n            ))}\n        </>\n    );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n    const [title, setText] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [done, setDone] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!title) {\n            alert('Please add a task!')\n            return\n        }\n\n        onAdd({ title, description, done });\n\n        setText(\"\")\n        setDescription(\"\")\n        setDone(false)\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Add Task\"\n                    value={title}\n                    onChange={(e) => setText(e.target.value)}\n                ></input>\n            </div>\n            <div className=\"form-control\">\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Add Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                ></input>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input\n                    type=\"checkbox\"\n                    value={done}\n                    onChange={(e) => setDone(e.currentTarget.checked)}\n                ></input>\n            </div>\n\n            <input\n                className=\"btn btn-block\"\n                type=\"submit\"\n                value=\"Save Task\"\n            ></input>\n        </form>\n    );\n};\n\nexport default AddTask;\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/\">Go back</Link>\n        </div>\n    )\n}\n\nexport default About\n","export const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const obj = {\n        status: \"Use the button above to mint your NFT!\",\n        address: addressArray[0],\n      };\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`} rel=\"noreferrer\">\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n};\n\nexport const getCurrentWalletConnected = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0],\n          status: \"Use the button above to mint your NFT!\",\n        };\n      } else {\n        return {\n          address: \"\",\n          status: \"🦊 Connect to Metamask using the button below.\",\n        };\n      }\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n};","import { useState, useEffect } from \"react\";\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/connect\";\n\nconst ConnectBtn = () => {\n    const [walletAddress, setWallet] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const { address, status } = await getCurrentWalletConnected();\n            setWallet(address);\n            setStatus(status);\n\n            addWalletListener();\n        }\n        fetchData();\n    }, []);\n\n    const connectWalletPressed = async () => {\n        const walletResponse = await connectWallet();\n        setStatus(walletResponse.status);\n        setWallet(walletResponse.address);\n    };\n\n    function addWalletListener() {\n        if (window.ethereum) {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                if (accounts.length > 0) {\n                    setWallet(accounts[0]);\n                    setStatus(\"Use the above button to mint your NFT!\");\n                } else {\n                    setWallet(\"\");\n                    setStatus(\n                        \"🦊 Connect to Metamask using the top right button.\"\n                    );\n                }\n            });\n        } else {\n            setStatus(\n                <p>\n                    {\" \"}\n                    🦊{\" \"}\n                    <a\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        href={`https://metamask.io/download.html`}\n                    >\n                        You must install Metamask, a virtual Ethereum wallet, in\n                        your browser.\n                    </a>\n                </p>\n            );\n        }\n    }\n\n    return (\n        <div className=\"crypto-box\">\n\n            <p id=\"status\">{status}</p>\n\n            <button onClick={connectWalletPressed} className=\"btn btn-connect\">\n                {walletAddress.length > 0 ? (\n                    \"Connected: \" +\n                    String(walletAddress).substring(0, 6) +\n                    \"...\" +\n                    String(walletAddress).substring(38)\n                ) : (\n                    <span>Connect Wallet</span>\n                )}\n            </button>\n        </div>\n    );\n};\n\nexport default ConnectBtn;\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nimport CryptoBox from \"./components/CryptoBox\";\n\nconst App = () => {\n    const [showAdd, setShowAdd] = useState(false);\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            title: \"Task 1\",\n            description: \"Description 1\",\n            done: false,\n        },\n        {\n            id: 2,\n            title: \"Task 2\",\n            description: \"Description 2\",\n            done: true,\n        },\n        {\n            id: 3,\n            title: \"Task 3\",\n            description: \"Description 3\",\n            done: false,\n        },\n    ]);\n\n    const addTask = (task) => {\n        const id = tasks[tasks.length - 1].id + 1;\n        setTasks([...tasks, { ...task, id }]);\n    };\n\n    const deleteTask = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    // create a function that toggles the done property of a task\n    const toggleTask = (id) => {\n        setTasks(\n            tasks.map((task) =>\n                task.id === id ? { ...task, done: !task.done } : task\n            )\n        );\n    };\n\n    return (\n      <Router>\n        <div className=\"container\">\n            <Header title=\"Hello\" showAdd={showAdd} setShow={() => setShowAdd(!showAdd)}/>\n\n        <Routes>\n\n            <Route path=\"/\"\n            element={\n            <>\n            {showAdd && <AddTask onAdd={addTask} />}\n\n            {tasks.length > 0 ? (\n                <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleTask}\n                />\n            ) : (\n                <h1>No tasks</h1>\n            )}\n\n            </>\n            }/>\n\n            <Route path='/about' element={<About />} />\n\n        </Routes>\n\n            <CryptoBox />\n\n            <Footer />\n        </div>\n      </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}