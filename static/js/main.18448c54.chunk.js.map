{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","utils/connect.js","components/Mint.js","components/CryptoBox.js","components/ThreeBox.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","setShow","onClick","style","backgroundColor","className","Header","showAdd","addEnabled","location","useLocation","pathname","Footer","to","About","connectWallet","a","window","ethereum","request","method","addressArray","obj","address","getCurrentWalletConnected","chainId","length","parseInt","chain","Web3","require","web3","givenProvider","mint","walletAddress","fromAddr","toString","tx","from","value","utils","toWei","eth","sendTransaction","on","hash","console","log","receipt","confirmationNumber","error","CryptoBox","setWallet","useState","setChainId","status","setStatus","balance","setBalance","fetchData","addWalletListener","addChainListener","useEffect","getBalance","err","wei","fromWei","substring","Balance","connectWalletPressed","walletResponse","accounts","ChainID","id","String","ThreeBox","ref","useRef","hovered","hover","clicked","click","speed","setSpeed","useFrame","state","delta","current","rotation","z","x","y","scale","event","then","onDoubleClick","onPointerOver","onPointerOut","args","App","setShowAdd","title","description","done","path","element","display","justifyContent","width","position","OrbitControls","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18448c54.chunk.js","sourcesContent":["const Button = ({ color, text, setShow }) => {\n    return (\n        <button \n            onClick={setShow}\n            style={{backgroundColor: color}} \n            className='btn'\n        >\n            {text}\n        </button>\n    )\n}\n\nexport default Button","import Button from './Button'\n\nimport { useLocation } from 'react-router-dom'\n\nconst Header = ({ showAdd, setShow, addEnabled }) => {\n\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1> NFT Dapp </h1>\n            {/* <Button color='green' text='New' onClick={onClick}/> */}\n            {(location.pathname === '/' && addEnabled) && <Button text={showAdd ? 'Close' : 'Add'} color={showAdd ? 'red' : 'steelBlue'} setShow={setShow}/>}\n        </header>\n    )\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black',\n// }\n\nexport default Header\n","import { Link } from 'react-router-dom';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/\">Go back</Link>\n        </div>\n    )\n}\n\nexport default About\n","export const connectWallet = async () => {\n    if (window.ethereum) {\n        try {\n            const addressArray = await window.ethereum.request({\n                method: \"eth_requestAccounts\",\n            });\n            const obj = {\n                address: addressArray[0],\n            };\n            return obj;\n        } catch (err) {\n            return {\n                address: \"\",\n            };\n        }\n    } else {\n        return {\n            address: \"\",\n        };\n    }\n};\n\n// Check if wallet is connected on load\nexport const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n        try {\n            // fetch addresses in injected web3 provider\n            const addressArray = await window.ethereum.request({\n                method: \"eth_accounts\",\n            });\n            // fetch chainId of injected web3 provider\n            const chainId = await window.ethereum.request({\n                method: \"eth_chainId\",\n            });\n\n            if (addressArray.length > 0) {\n                if (parseInt(chainId, 16) === 1) {\n                    return {\n                        address: addressArray[0],\n                        chain: chainId,\n                    };\n                } else {\n                    return {\n                        address: addressArray[0],\n                        chain: chainId,\n                    };\n                }\n            } else {\n                return {\n                    address: \"\",\n                    chain: 0,\n                };\n            }\n        } catch (err) {\n            return {\n                address: \"\",\n                chain: 0,\n            };\n        }\n    } else {\n        return {\n            address: \"\",\n            chain: 0,\n        };\n    }\n};\n","const Web3 = require(\"web3\");\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\nexport const Balance = (walletAddress, setBalance) => {\n    if (walletAddress.length > 0) {\n        web3.eth.getBalance(walletAddress, (err, wei) => {\n            if (err) {\n                console.log(err);\n            } else {\n                setBalance(web3.utils.fromWei(wei, \"ether\").substring(0, 6));\n            }\n        });\n    } else {\n        setBalance(\"0\");\n    }\n};\n\nexport const mint = async function plzWork({ walletAddress })  {\n\n        let fromAddr = walletAddress.toString(); \n\n\n    if (fromAddr.length > 0) {\n        var tx = {\n            from: fromAddr,\n            to: \"0xd06f77605F887dC382CF74c8de723E4b53D14a7c\",\n            value: web3.utils.toWei(\"0.1\", \"ether\"),\n            // gas: 200000,\n        }\n        await web3.eth.sendTransaction(tx)\n        .on('transactionHash', function(hash){\n            console.log(hash);\n        })\n        .on('receipt', function(receipt){\n            console.log(receipt);\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n            console.log(confirmationNumber);\n            console.log(receipt);\n        })\n        .on('error', function(error){\n            console.log(error);\n        });\n\n    }\n\n};\n","import { useState, useEffect } from \"react\";\nimport {\n    connectWallet,\n    getCurrentWalletConnected,\n} from \"../utils/connect\";\nimport {\n    Balance,\n} from \"./Mint\";\n\nconst CryptoBox = ({ walletAddress, setWallet }) => {\n\n    const [chainId, setChainId] = useState(0);\n    const [status, setStatus] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n\n    const fetchData = async () => {\n        const { address, chain } = await getCurrentWalletConnected();\n        setWallet(address);\n        setChainId(chain);\n\n        addWalletListener();\n        addChainListener();\n    };\n    fetchData();\n\n    useEffect(() => {\n        Balance(walletAddress, setBalance);\n    }, [walletAddress, status]);\n\n    useEffect(() => {\n        if (window.ethereum) {\n            if (walletAddress.length > 0) {\n                if (parseInt(chainId, 16) === 1) {\n                    setStatus(\"Click the box above to mint 👆\");\n                } else {\n                    setStatus(\"Switch to Ethereum Mainnet 🙏\");\n                }\n            } else {\n                setStatus(\"Click below to connect to Metamask 🦊\");\n            }\n        } else {\n            setStatus(\"Install the Metamask extension.\");\n        }\n    }, [walletAddress, chainId]);\n\n    const connectWalletPressed = async () => {\n        const walletResponse = await connectWallet();\n        setWallet(walletResponse.address);\n    };\n\n    function addWalletListener() {\n        if (window.ethereum) {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                if (accounts.length > 0) {\n                    setWallet(accounts[0]);\n                } else {\n                    setWallet(\"\");\n                }\n            });\n        } \n    }\n\n    function addChainListener() {\n        if (window.ethereum) {\n            window.ethereum.on(\"chainChanged\", (ChainID) => {\n                setChainId(ChainID);\n            });\n        }\n    }\n\n    return (\n        <div className=\"crypto-box\">\n            <p id=\"status\">{status}</p>\n\n            <p className=\"balance\">\n                <strong>Balance: Ξ</strong>\n                {balance}\n            </p>\n\n            <button onClick={connectWalletPressed} className=\"btn btn-connect\">\n                {walletAddress.length > 0 ? (\n                    \"Connected: \" +\n                    String(walletAddress).substring(0, 6) +\n                    \"...\" +\n                    String(walletAddress).substring(38)\n                ) : (\n                    <span>Connect Wallet</span>\n                )}\n            </button>\n        </div>\n    );\n};\n\nexport default CryptoBox;\n","import { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { mint } from \"./Mint\";\n\nconst ThreeBox = ({ walletAddress }) => {\n    const ref = useRef();\n\n    const [hovered, hover] = useState(false);\n    const [clicked, click] = useState(false);\n\n    const [speed, setSpeed] = useState(1);\n\n    useFrame((state, delta) => {\n        ref.current.rotation.z += 0.01 * speed;\n        ref.current.rotation.x += 0.001 * speed;\n        ref.current.rotation.y += 0.003 * speed;\n    });\n\n    const doubleClicked = () => (console.log(\"doubleClicked\"));\n\n    return (\n        <mesh\n            // {...props}\n            ref={ref}\n            scale={clicked ? 1.1 : 1}\n            // onClick={(event) => click(!clicked)}\n            onClick={(event) => {\n                setSpeed(9 / speed);\n                click(!clicked);\n                mint({walletAddress}).then(() => {\n                    setSpeed(1);\n                    click(false);\n                    console.log(\"minted\");\n                }, \n                () => {\n                    setSpeed(1);\n                    click(false);\n                    console.log(\"mint failed\");\n                });\n            }}\n            onDoubleClick={(event) => doubleClicked()}\n            onPointerOver={(event) => hover(true)}\n            onPointerOut={(event) => hover(false)}\n        >\n            <boxGeometry args={[3, 3, 3]} />\n            <meshStandardMaterial color={hovered ? (clicked ? \"lightpink\" : \"hotpink\") : (clicked ? \"steelBlue\" : \"orange\")} />\n        </mesh>\n    );\n};\n\nexport default ThreeBox;\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nimport CryptoBox from \"./components/CryptoBox\";\n\nimport ThreeBox from \"./components/ThreeBox\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\"\n\nconst App = () => {\n\n    const [walletAddress, setWallet] = useState(\"\");\n\n    const [showAdd, setShowAdd] = useState(false);\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            title: \"Task 1\",\n            description: \"Description 1\",\n            done: false,\n        },\n        {\n            id: 2,\n            title: \"Task 2\",\n            description: \"Description 2\",\n            done: true,\n        },\n        {\n            id: 3,\n            title: \"Task 3\",\n            description: \"Description 3\",\n            done: false,\n        },\n    ]);\n\n    const addTask = (task) => {\n        const id = tasks[tasks.length - 1].id + 1;\n        setTasks([...tasks, { ...task, id }]);\n    };\n\n    const deleteTask = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    // create a function that toggles the done property of a task\n    const toggleTask = (id) => {\n        setTasks(\n            tasks.map((task) =>\n                task.id === id ? { ...task, done: !task.done } : task\n            )\n        );\n    };\n\n    const showTasks = false;\n\n    return (\n      <Router>\n        <div className=\"container\">\n            <Header \n            showAdd={showAdd}\n            setShow={() => setShowAdd(!showAdd)}\n            addEnabled={showTasks}\n            />\n\n        <Routes>\n\n            <Route path=\"/\"\n            element=\n              {showTasks  &&             <>\n            {showAdd && <AddTask onAdd={addTask} />}\n\n            {tasks.length > 0 ? (\n                <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleTask}\n                />\n            ) : (\n                <h1>No tasks</h1>\n            )}\n\n            </> } \n            />\n\n            <Route path='/about' element={<About />} />\n\n        </Routes>\n\n            <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\", \n            }}\n            >\n            <Canvas\n            style={{\n              width: \"90%\",\n            }}\n            >\n              <ambientLight />\n              <pointLight position={[5, 8, 0]} />\n              <ThreeBox \n                position={[-1.2, 0, 0]}\n                walletAddress={walletAddress}\n              />\n              <OrbitControls/>\n            </Canvas>\n\n            </div>\n\n            <CryptoBox\n              walletAddress={walletAddress}\n              setWallet={setWallet}\n            />\n\n            <Footer />\n        </div>\n      </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}